Subject,Number,Title,Keywords,Description,Prerequisite,Instructor,Term,TextBook,GPA,ExamBankLink,Additional Info
CMPUT,101,Introduction to Computing,"[fundamental, algorithms, logic, number systems, circuits]","An introduction to fundamental concepts in computation, including state, abstraction, generalization, and representation. Introduction to algorithms, logic, number systems, circuits, and other topics in elementary computing science.",,,F&W,None,None,,
CMPUT,174,Introduction to the Foundations of Computation I,"[introduction to python, simple game development, data structures, recursion, syntax]","CMPUT 174 and 175 use a problem-driven approach to introduce the fundamental ideas of Computing Science. Emphasis is on the underlying process behind the solution, independent of programming language or style. Basic notions of state, control flow, data structures, recursion, modularization, and testing are introduced through solving simple problems in a variety of domains such as text analysis, map navigation, game search, simulation, and cryptography. Students learn to program by reading and modifying existing programs as well as writing new ones. No prior programming experience is necessary. Prerequisite: Math 30 or 30-1. See Note (1) above. Credit cannot be obtained for CMPUT 174 if credit has already been obtained for CMPUT 274 or 275, except with permission of the Department.",,,F&W,,,,
CMPUT,175,Introduction to the Foundations of Computation II,"[algorithms, data structures, objects, functional programming, time and memory consumption, user interface]","A continuation of CMPUT 174, revisiting topics of greater depth and complexity. More sophisticated notions such as objects, functional programming, time and memory consumption, and user interface building are explored. Upon completion of this two course sequence, students from any discipline should be able to build programs to solve basic problems in their area, and will be prepared to take more advanced Computing Science courses. Prerequisite: CMPUT 174 or SCI 100. Credit cannot be obtained for CMPUT 175 if credit has been obtained for CMPUT 275, except with permission of the Department.",CMPUT 174 or SCI 100,,F&W,,,,
CMPUT,201,Practical Programming Methodology,"[Linux, C]","Introduction to the principles, methods, tools, and practices of the professional programmer. The lectures focus on the fundamental principles of software engineering based on abstract data types and their implementations. The laboratories offer an intensive apprenticeship to the aspiring software developer. Students use C and C++ and software development tools of the Unix environment",CMPUT 175,Guohui Lin,F&W,C Programming A Modern Approach,,,
CMPUT,204,Alogirthm I,"[algorithm, no lab]","The first of two courses on algorithm design and analysis, with emphasis on fundamentals of searching, sorting, and graph algorithms. Examples include divide and conquer, dynamic programming, greedy methods, backtracking, and local search methods, together with analysis techniques to estimate program efficiency","CMPUT 175 or 275 and CMPUT 272; one of MATH 100, 113, 114, 117, 134, 144, 154, or SCI 100",Jia-huai You,F&W,IntroductionToAlgorithms_3rd_CLRS,,,
CMPUT,206,Introduction to Digital Image Processing,[multimedia],"An introduction to basic digital image processing theory, and the tools that make advanced image manipulation possible for ordinary users. Image processing is important in many applications: editing and processing photographs, special effects for movies, drawing animated characters starting with photographs, analyzing and enhancing images captured by the Mars Rover or the Hubble telescope, and detecting suspects from surveillance cameras. Image processing concepts are introduced using tools like Photoshop and GIMP. Exposure to simple image processing programming with Java and MATLAB. This course is preparation for more advanced courses in the Digital Media area","Any 100-level Computing Science course, plus knowledge of first-year level MATH, STAT; and introductory Java, C, or similar programming experience; or consent of the instructor or SCI 100. Open to students in the Faculty of Arts, Engineering and Sciences; others require consent of the instructor.",Nilanjan Ray,,,,,
CMPUT,229,Computer Organization and Architecture I,"[assembly, lower level]","Number representation, computer architecture and organization, instruction-set architecture, assembly-level programming, procedures, stack frames, memory access through pointers, exception handling, computer arithmetic, floating-point representation, datapath, control logic, pipelining, memory hierarchy, virtual memory.",CMPUT 175 or 274. Corequisite: one of CMPUT 201 or 275,"Jose Nelson Amaral (fall), Karim Ali (winter)",F&W,,,,
CMPUT,250,Computers and Games,"[video games, group project]","An interdisciplinary course for students in Science, Arts, and other faculties. The focus is on games as interactive entertainment, their role in society, and how they are made. Teams composed of students with diverse backgrounds (e.g. English, Art and Design, and Computing Science) follow the entire creative process: from concept, through pitch, to delivery, of a short narrative-based game using a commercial game engine. To achieve the required mix of backgrounds and experience, students must apply to be considered for this course. See the Department web site for the online form",Second-year standing,,,,,,
CMPUT,272,Formal Systems and Logic in Computing Science,"[logic, proof, no lab]","An introduction to the tools of set theory, logic, and induction, and their use in the practice of reasoning about algorithms and programs. Basic set theory; the notion of a function; counting; propositional and predicate logic and their proof systems; inductive definitions and proofs by induction; program specification and correctness.","Any 100-level CMPUT course, CMPUT 274 or SCI 100",,F&W,,,,
CMPUT,274,Introduction to Tangible Computing I,"[Python, C++]","This is part 1 of a 2 sequence intensive problem-based introduction to Computing Science. In part 1, the key concepts of procedural programming, basic algorithm design and analysis (lists, queues, trees, sorting, searching), and reactive interfacing with the world are learned by solving a series of problems using the Arduino platform and C/C++. The use of a resource-limited processor with no operating system opens up the inner workings of computing. Development is done using the Linux operating system with the exposed compiler tool chain.",,,F,,,,"1st year CS honor, and CE"
CMPUT,275,Introduction to Tangible Computing II,"[C++, Arduino]","This is part 2 of a 2 sequence intensive introduction to Computing Science. Part 2 expands to add object-oriented programming, a higher level language (Python), and more complex algorithms and data structures such as shortest paths in graphs; caching, memoization, and dynamic programming; client-server style computing; recursion; and limited distributed of computation tasks between the Arduino platform and the traditional desktop in order to explore design tradeoffs",CMPUT 274,,W,,,,
CMPUT,291,Introduction to File and Database Management,"[database, SQL]",Basic concepts in computer data organization and information processing; entity-relationship model; relational model; SQL and other relational query languages; storage architecture; physical organization of data; access methods for relational data. Programming experience (e.g. Java or Python) is required for the course project.,CMPUT 175/275,,W,,,,
CMPUT,296,Topics in Computing Science,,,,,,,,,
CMPUT,300,Computers and Society,"[no lab, paper]","Social, ethical, professional, economic, and legal issues in the development and deployment of computer technology in society.",Any CMPUT course and any 200-level course,Davood Rafiei,F&W,Database System Concepts,,,
CMPUT,301,Introduction to Software Engineering,"[software dev, software design, java, android, group project]","Object-oriented design and analysis, with interactive applications as the primary example. Topics include: software process; revision control; Unified Modeling Language (UML); requirements; software architecture, design patterns, frameworks, design guidelines; unit testing; refactoring; software tools. ",CMPUT 201/275,"Ken Wong (fall), Abram Hindle (winter)",F&W,None,,,
CMPUT,302,Introduction to Human Computer Interaction,,"A complementary course to introductory software engineering focused on a user-centered approach to software design. The main themes are how humans interact with physical and information environments, and how to design software with human's information needs and their cognitive capacities in mind. Topics include the user-centered design cycle, and evaluation methods for discovering usability problems in interface design",CMPUT 301,,,,,,
CMPUT,304,Algorithms II,"[algorithm, no lab]","The second course of a two-course sequence on algorithm design. Emphasis on principles of algorithm design. Categories of algorithms such as divide-and-conquer, greedy algorithms, dynamic programming; analysis of algorithms; limits of algorithm design; NP-completeness; heuristic algorithms.","CMPUT 204; one of STAT 141, 151, 235 or 265 or SCI 151; one of MATH 225, 227, 228 or consent of the instructor","Ryan Hyward, Jia-Huai You",,,,,
CMPUT,307,3D Modeling and Animation,"[multimedia, 3d modeling]","An introductory course on the theory and applications of computer based 3D modeling and animation. The course will cover a selection of topics from overview of tools supporting modeling and animation, automatically generating 3D models, and animation of skeleton based models through algorithms and software. Applications of 3D modeling and animation in games, virtual/augmented environments, movies, and emerging video transmission algorithms will be discussed.","Some background in image processing or graphics, e.g., CMPUT 206 or CMPUT 311; knowledge of first or preferably second-year level MATH/STAT, e.g., STAT 141/151/252 or 266, and MATH 214 or 225; experience in programming, e.g., CMPUT 174 or 100. Consent of the instructor needed if some background courses are lacking.",Nilanjan Ray,,,,,
CMPUT,312,Introduction to Robotics and Mechatronics,,"Algorithms and software paradigms for robot programming; mathematical modeling of robot arms and rovers including kinematics, and an introduction to dynamics and control; sensors, motors and their modeling; basics of image processing and machine vision; vision-guided motion control.","CMPUT 275, CMPUT 340 or CMPUT 418 (CMPUT 340 may be taken concurrently). Students having CMPUT 174, 175, 201, 204 may seek individual approval by instructor.",,,,,,
CMPUT,313,Computer Networks,"[network, network protocols]",Introduction to computer communication networks; protocols for error and flow control; wired and wireless medium access protocols; routing and congestion control; internet architecture and protocols; multimedia transmission; recent advances in networking,"CMPUT 201 and 204 or 275; one of CMPUT 229, E E 380 or ECE 212 and STAT 252 or 266.",Ehab Elmallah,W,Computer Networking: A Top-Down Approach,,,
CMPUT,325,Non-Procedural Programming Languages,"[functional programming, logic programming, lisp, prolog]","A study of the theory, run-time structure, and implementation of selected non-procedural programming languages. Languages will be selected from the domains of functional, and logic-based languages","CMPUT 201 and 204 or 275; one of CMPUT 229, E E 380 or ECE 212, and MATH 125","Jia-Huai You, Martin Muller",W,None,,,
CMPUT,328,Visual Recognition,"[computer vision, deep learning, python, pytorch]","Introduction to visual recognition to recognize objects and classify scenes or images automatically by a computer. Supervised and unsupervised machine learning principles and deep learning techniques will be utilized for visual recognition. Successful commercial systems based on visual recognition range from entertainment to serious scientific research: face detection and recognition on personal devices, social media.","CMPUT 115 or 175; one of MATH 100, 113, 114, 117, 134, 144, 154; MATH 125; STAT 141, 151 or 235.",Nilanjan Ray,F,Stanford cs231n,,,
CMPUT,331,Computational Cryptography,"[Cryptography, Communication, python]","Cryptography is the science of secure communications. This course is an introduction to computational methods for encrypting and deciphering messages, with an emphasis on computer implementation.","[CMPUT 201,CMPUT272]",Greg Kondark,"[20F,21F]","The Code Book, Cracking Codes with Python",None,None,None
CMPUT,333,Security in a Networked World,"[Security, vulnerability, authentication]","Authentication protocols, passwords, shared and public key cryptography, network protocol and network services security, firewalls, malicious code, vulnerability identification, intrusion detection, wireless security",CMPUT 201/275,"Ioanis Nikolaidis: 
http://webdocs.cs.ualberta.ca/~yannis/","21W, 22W",,,,
CMPUT,340,Introduction to Numerical Methods,"[arithmatic error, numbers, linear algerba, machine learning]","Computer arithmetic and errors. The study of computational methods for solving problems in linear algebra, non-linear equations, optimization, interpolation and approximation, and integration. This course will provide a basic foundation in numerical methods that supports further study in machine learning; computer graphics, vision and multimedia; robotics; and other topics in Science and Engineering","Prerequisites: CMPUT 204 or 275; MATH 125, 214; one of STAT 141, 151, 235 or 265 or SCI 151","Levi Lelis: 
https://www.amii.ca/about/our-people/levi-lelis/","20F, 21F",Scientific Computing,,,
CMPUT,350,Advanced Games Programming,"[video games, AI, C++]","This course focuses on state-of-the-art AI and graphics programming for video games. Part 1 introduces C++, the language of choice for video game engines, emphasizing efficiency, safety, the Standard Template Library, and OpenGL. Part 2 on real time strategy deals with efficient pathfinding algorithms, planning, and scripting AI systems. Student projects give hands-on experience directly applicable to the video games industry. ","Prerequisites: CMPUT 201 or 275, and 204","Micheal Buro:
https://apps.ualberta.ca/catalogue/instructor/mburo
https://skatgame.net/mburo/","20F, 21W",,,,
CMPUT,355,"Games, Puzzles, Algorithms","[algorithm, solving puzzles, solving games, AlphaGo]","An introduction to algorithms and theory behind computer programs that solve puzzles (mazes, peg solitaire, etc.) or play games (chess, Go, Hex, etc.). This course is intended for a general audience.",any 200-level CMPUT,Ryan Hayward: https://apps.ualberta.ca/catalogue/instructor/hayward,"20F, 21W",,,"https://webdocs.cs.ualberta.ca/~hayward/396/asn/16/fnl16.pdf 
https://webdocs.cs.ualberta.ca/~hayward/355/asn/19/fnl18.pdf",Course Guide: http://webdocs.cs.ualberta.ca/~hayward/355/asn/20/course-guide.pdf
CMPUT,361,Introduction to Information Retrieval,"[organize and search through large collections of documents, Web search engines]","Most of the knowledge we acquire, use, and share is expressed in natural language, and preserved as primarily textual documents. This course introduces the fundamental algorithms and data structures for organizing and searching through large collections of documents, and the techniques for evaluating the quality of search results. The course also covers practical machine-learning algorithms for text and foundational technologies used by Web search engines.",CMPUT 201 and CMPUT 204 or 275; MATH 125 or equivalent is strongly recommended.,Denilson Barbosa,"20W,21W,22W",,,,
CMPUT,366,Intelligent Systems,"[artificial intelligence, search and problem-solving techniques, knowledge representation and reasoning, reasoning and acting under uncertainty, and machine learning]","Introduction to artificial intelligence focusing on techniques for building intelligent software systems and agents. Topics include search and problem-solving techniques, knowledge representation and reasoning, reasoning and acting under uncertainty, and machine learning (including neural networks). Recent applications such as planning and scheduling, diagnosis, decision support systems, and data mining.","CMPUT 204 or 275; one of STAT 141, 151, 235 or 265 or SCI 151.","Vadim Bulitko, James Wright","20F, 21W",,,,
CMPUT,379,Operating System Concepts,"[Operating System, synchronization, deadlock]","Processes: process state transitions; operations on processes; interrupt processing; multiprocessor considerations; resource allocation; synchronization; critical sections and events; semaphores; deadlock: avoidance, detection, and recovery; memory management; virtual memory; paging and segmentation; page replacement strategies; working sets; demand paging; process scheduling; scheduling algorithms; file system functions; file organization; space allocation; elements of operating systems security; virtual machines.","CMPUT 201 and 204 or 275; one of CMPUT 229, E E 380 or ECE 212.","Jonathan Schaeffer, Ioanis Nikolaidis","20F, 21W",,,,
CMPUT,382,Introduction to GPU Programming,[Graphics processing units (GPU)],"Graphics processing units (GPU) can be programmed like a coprocessor to solve non-graphics problems, including voice recognition, computational physics, convolutional neural networks, and machine learning. The many processing cores of a GPU support a high-degree of parallelism. Course topics include hardware architecture, algorithmic design, programming languages (e.g., CUDA, OpenCL), and principles of programming for GPUs for high performance.","CMPUT 201 or 275, and CMPUT 229.",Pierre Boulanger,21W,,,,
CMPUT,391,Database Management Systems,"[database management, data mining, data warehousing, and information retrieval]","Database design and normalization theory, transaction management, query processing and optimization; support for special data types such as multimedia, spatial data, and XML documents; support for complex applications and data analysis such as data mining, data warehousing, and information retrieval.","CMPUT 201 and CMPUT 204 or 275, and CMPUT 291.",Denilson Barbosa,"20F,21W",,,,
CMPUT,396,Topics in Computing Science: ,,,,,,,,,
CMPUT,397,Topics in Computing Science,[Reinforcement Learning],,,,,,,,
CMPUT,399,Topics in Computing Science,[research class with professor as supervisor],,,,,,,,
CMPUT,404,Web Applications and Architecture,"[web, project, javascript]","	
Introduction to modern web architecture, from user-facing applications to machine-facing web-services. ",CMPUT301， CMPUT291,,,,,,
CMPUT,401,Software Process and Product Management,"[company, project, group, agile, product, software process]",group project which topic and need determined by actual companies,CMPUT301,,,,,,
CMPUT,415,Compiler Design,"[compiler, lower level, C++, Antlr, llvm, assembly]","	
Compilers, interpreters, lexical analysis, syntax analysis, syntax directed translation, code generation, code optimization.","one of CMPUT 229, E E 380 or ECE 212, and a 300-level Computing Science course or consent of the instructor.",,,,,,
CMPUT,428,Computer Vision,[Computer Vision],ntroduction to the geometry and photometry of the 3D to 2D image formation process for the purpose of computing scene properties from camera images. Computing and analyzing motion in image sequences. Recognition of objects (what) and spatial relationships (where) from images and tracking of these in video sequences. ,"rerequisites: CMPUT 201 or 275; one of CMPUT 340, 418 or equivalent knowledge; one of MATH 101, 115, 118, 136, 146 or 156, and one of MATH 102, 125, or 127.",,,,,,
CMPUT,411,Introduction to Computer Graphics ,[computer graphics],2D and 3D transformation; 3D modeling and viewing; illumination models and shading methods;,"CMPUT 204 or 275, 301; one of CMPUT 340, 418 or equivalent knowledge, and MATH 214.",,,,,,
CMPUT,416,Foundations of Program Analysis,[program analysis],"Introduction to the main concepts of program analysis such as intermediate representations, inter-procedural and intra-procedural analysis techniques, call graphs, pointer analysis, and analysis frameworks. ","CMPUT 201 or 275, and CMPUT 272.",,,,,,
,,,,,,,,,,,
CMPUT,455,"Search, Knowledge and Simulation",[state-of-the-art decision-making algorithms],"When making decisions in games, computers rely on three main ideas: search, knowledge and simulations. Knowledge can be created by machine learning techniques and encoded in deep neural networks. Search and simulations help to understand the short and long-term consequences of possible actions. This course leads from basic concepts to state-of-the-art decision-making algorithms.",any 300 level,James Wright,21W,,,,
CMPUT,463,Probabilistic Graphical Models,"[artificial intelligence, draw plausible interpretations from inputs]","Probabilistic Graphical Models (PGMs) includes Bayesian belief nets, Markov random fields and other representations. This course provides an introduction to the field, describing semantics, inference and learning, as well as practical applications of these system. It will cover the fundamentals of graphical probability models, focusing on the key representations, algorithms, and theories that have facilitated much recent progress in artificial intelligence research. Programming assignments will include hands-on experiments with various reasoning systems.","one of CMPUT 340 or 418; one of STAT 141, 151, 235 or 265 or SCI 151",n/a,,,,,
CMPUT,466,Introduction to Machine Learning,"[supervised learning, classical regression and classification algorithms]","Learning is essential for many real-world tasks, including recognition, diagnosis, forecasting and data-mining. This course covers a variety of learning scenarios (supervised, unsupervised and partially supervised), as well as foundational methods for regression, classification, dimensionality reduction and modeling. Techniques such as kernels, optimization and probabilistic graphical models will typically be introduced. It will also provide the formal foundations for understanding when learning is possible and practical.","one of CMPUT 340 or 418; one of STAT 141, 151, 235 or 265 or SCI 151",Alona Fyshe,"21W, 21F, 22W",,,,
CMPUT,470,Computational Neuroscience,"[biological systems, neural networks]","This is an interdisciplinary course covering areas in Computing Science, Neuroscience and Biomedical Engineering. It covers three main areas. How do biological systems represent and process information at the level of single neurons? How is this information processed at the level of small neural networks? How this information is used to control body movements. "," one of PHYSL 372, PMCOL 371, PEDS 302, CMPUT 340",n/a,,,,,
CMPUT,474,"Formal Languages, Automata, and Computability",[basics],Formal grammars; relationship between grammars and automata; regular expressions; finite state machines; pushdown automata; Turing machines; computability; the halting problem; time and space complexity. ,"CMPUT 204, one of CMPUT 229, E E 380 or ECE 212 and one of MATH 225, 227, or 228",Dale Schuurmans,"21W, 22W",,,,
CMPUT,481,Parallel and Distributed Systems,"[parallel programming, parallel and distributed systems]","This course provides an undergraduate-level introduction to parallel programming, parallel and distributed systems, and high-performance computing in science and engineering. Both shared-memory parallel computers and distributed-memory multi computers (e.g., clusters) will be studied. Aspects of the practice of, and (some) research issues in, parallelism will be covered. There will be an emphasis on thread programming, data-parallel programming, and performance evaluation.","CMPUT 201, CMPUT 379",Paul Lu,21W,,,,
CMPUT,496,Topics in Computing Science,,https://www.ualberta.ca/computing-science/undergraduate-studies/course-directory/index.html,,,,,,,
CMPUT,497,Topics in Computing Science,,https://apps.ualberta.ca/catalogue/course/cmput,,,,,,,